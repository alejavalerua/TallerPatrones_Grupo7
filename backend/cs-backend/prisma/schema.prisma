generator client {
  provider        = "prisma-client-js"

}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public"]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model priority {
  id                                 BigInt    @id @default(autoincrement())
  priority                           String
  tickets_tickets_priorityTopriority tickets[] @relation("tickets_priorityTopriority")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model profiles {
  id                                    BigInt    @id @default(autoincrement())
  created_at                            DateTime  @default(now()) @db.Timestamptz(6)
  email                                 String    @unique
  name                                  String?
  role                                  Int       @default(1)
  roles                                 roles     @relation(fields: [role], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tickets_tickets_assignee_idToprofiles tickets[] @relation("tickets_assignee_idToprofiles")
  tickets_tickets_customer_idToprofiles tickets[] @relation("tickets_customer_idToprofiles")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model roles {
  id       Int        @id @default(autoincrement())
  role     String?
  profiles profiles[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ticket_status {
  id      BigInt    @id @default(autoincrement())
  status  String
  tickets tickets[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tickets {
  id                                     BigInt        @id @default(autoincrement())
  title                                  String
  description                            String
  status                                 BigInt        @default(1)
  priority                               BigInt        @default(2)
  customer_id                            BigInt?
  assignee_id                            BigInt?
  created_at                             DateTime      @default(now()) @db.Timestamptz(6)
  updated_at                             DateTime?     @default(now()) @db.Timestamp(6)
  profiles_tickets_assignee_idToprofiles profiles?     @relation("tickets_assignee_idToprofiles", fields: [assignee_id], references: [id], onUpdate: NoAction)
  profiles_tickets_customer_idToprofiles profiles?     @relation("tickets_customer_idToprofiles", fields: [customer_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  priority_tickets_priorityTopriority    priority      @relation("tickets_priorityTopriority", fields: [priority], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ticket_status                          ticket_status @relation(fields: [status], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}
